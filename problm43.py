{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a18a4cff",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "117\n",
      "AATTCACGTG-AGCGGTACTCTCGCGACGTAGTTAGAGACCTGTCTTCCGTAGCAA--AGCGACCCGGATGACGCGTAATC--CAC--CCT-AAC--A-CGA--TGTATTCCT-TATTTGT-TTT-GCAATAGTTAAAACTGT-CGTTGATCGCTATCGCGAAGCGTCAGATACG-GCT-AG--GTAAACCC--GGAC--CTGTGGATGCCATGTAGCTTGGTCCCACTTGTGGTGTTACTT-CAC-CTC-CAA-ACTC-CTTTGACCTCAA-TGCCCCACGCAACG-CGCATATTGT--TGAAGG-ACGA-AGTCAAGTGCTGATCTAGAGTTA-A-CT--TCACGATATGCTCCGA-GAAA--AGAG-----ACGCGC-G-GCCTGTTTGATCATC-GT-C--CTGAGCGGGATGATGTATGTTGGCGTTTATAC-C-AA-T---GTCACCGTTGTAAC-CT-GA--GCAGCC-CGGA-CTAGTCAAGCAAA--GATGTA-CTACCTTAGGAGGT-T-TA-T-A-AGAT-A-TTGATTTTACCAT-GTACCA-TG-CGTATAAT-T--G-TTC-GTATGGCAGCTGTGTGCCCGACGCAT---TAGA-GCAGAT----TGC-GA-GCATC-TTACACAGTTTGCCTTATAGG-GTTATC--GCACGTCCGCGTCCCATGAGCTAGGCCCAATAACCT----CAGCGCTTTA-TC-AGTAAGCTCCGGAAC-ATCCGCGTACTGTCCCCAA--GCCAAAAGT-GGGAGCC-TAGATCAAGT-GTGCGCCGC-GGGTGTTCGCCTGATAC-CCGGATCGGTACAT-GTAACACGGCGGGCTTCCAT-AATGTATTTTCCATA-CG-TA--ACTC-CA-T-TAT-AGTATCACCGAGTATTGCG-TTAACACTCTA-T-TTGCCCTCTTCTGGTTACTTGTACAAGGCACATAGACTC---T\n",
      "CCCCCATTTGCTGCAGTACGAAAGC--CG-AGATA-AGGCC-G-C-T-CGGAGTAATTATCG---CGTACGA-AAGTTTTCGACACGGCCTGAACAGACCGAGTTGAAACCCTATCTTTCTCTTTCG-AA-AG----GACT-TATTTTGA-C-CTA-CGC-TTTC-AAAGATACGATCTCTGTTGTACCCCCATATACGACT-CGGA-GACA--TAG--TGGTCCCA--AGT--TG-TACTTGC-CGC-CGCAACCCTCGC-TCGA-CTCAATTG-GGAAC-C-CCGTGGCATATTGTGGCGCCGGTAGGACACTCCCGT--TG-TC---A-TTACACCTGGTTA-GATA--AACCGATTAAACCA-AGTTTCCACGCGCTGAG-C-GACTGA--ACCGGTGCGGCT-A-C-GG-TTAT-CA-GCT-GCCTGTA-ACTCTAACTCCGGTCA-C-TTG-AGCTCTATATCGC-GCCTTGAACCAAG-GGATCAAATCGGT-TAGATAGC-GAGGACGTCTGAAGTGACAGCTGACGTGATAGT--C-TGGTGCCACCGACCTAT-GTGTCGGCCTCTG-ATGGC-G-TGTGACCCCGTCCCATAGGTA-ATACAGGTCCGCTGCGGATGCAACGGTCCACAAACTG---TAT-GGTGTAATCGTGCAC-TACAAG-GCC-TG-G--AAGCGCAA-ATGCTGGGACTGGGCTTAAGTCTAGT--CCTACAGAACGAGGCTCGGGCTG-CCTTAACGGGCACAAGTATGAAGCCACAGA--AA-TATTTCATTGCAATATG-T-G-CTG-TGCGATTTATC-GTATATAG-AA-TCTGTGGCCTTCCATCACCGT-TTTTGCA-ACCGCGAGGGC-CGCAGTATTTGAG-A-CAAC-A-TA---CGATT-A-A-TCCAGTGTAGGCCT-TGATAGAGAGGAG-A-AAGG----TAGAC-CGGGT\n"
     ]
    }
   ],
   "source": [
    "def sequence_alignment(s1, s2, indel_penalty=1):\n",
    "    # Add a '-' character to the beginning of both input sequences to account for gaps.\n",
    "    s1 = \"-\" + s1\n",
    "    s2 = \"-\" + s2\n",
    "\n",
    "    # Create a matrix to store the alignment scores and another for backtracking.\n",
    "    score_matrix = [[0 for _ in range(len(s2))] for _ in range(len(s1))]\n",
    "    backtrack_matrix = [[None for _ in range(len(s2))] for _ in range(len(s1))]\n",
    "\n",
    "    # Fill in the score and backtrack matrices using dynamic programming.\n",
    "    for i in range(1, len(s1)):\n",
    "        for j in range(1, len(s2)):\n",
    "            # Calculate scores for match, delete, and insert.\n",
    "            match_score = score_matrix[i - 1][j - 1] + (1 if s1[i] == s2[j] else -1)\n",
    "            delete_score = score_matrix[i - 1][j] - indel_penalty\n",
    "            insert_score = score_matrix[i][j - 1] - indel_penalty\n",
    "            # Choose the maximum score and store it in the score matrix.\n",
    "            score_matrix[i][j] = max(match_score, delete_score, insert_score)\n",
    "            # Store the direction of the maximum score in the backtrack matrix.\n",
    "            if score_matrix[i][j] == match_score:\n",
    "                backtrack_matrix[i][j] = \"d\"  # \"d\" for diagonal\n",
    "            elif score_matrix[i][j] == delete_score:\n",
    "                backtrack_matrix[i][j] = \"u\"  # \"u\" for up\n",
    "            elif score_matrix[i][j] == insert_score:\n",
    "                backtrack_matrix[i][j] = \"l\"  # \"l\" for left\n",
    "\n",
    "    # Trace back from the highest score to reconstruct the alignment.\n",
    "    j = len(s2) - 1\n",
    "    i = max(enumerate([score_matrix[row][j] for row in range(len(s2) - 1, len(s1) - 1)]), key=lambda x: x[1])[0] + len(s2) - 1\n",
    "    max_alignment_score = score_matrix[i][j]\n",
    "\n",
    "    aligned_s1 = aligned_s2 = \"\"\n",
    "    while backtrack_matrix[i][j] is not None:\n",
    "        direction = backtrack_matrix[i][j]\n",
    "        if direction == \"d\":\n",
    "            # If moving diagonally, add characters from both sequences to the alignment.\n",
    "            aligned_s1 = s1[i] + aligned_s1\n",
    "            aligned_s2 = s2[j] + aligned_s2\n",
    "            i -= 1\n",
    "            j -= 1\n",
    "        elif direction == \"u\":\n",
    "            # If moving up, add a character from s1 to the alignment and a gap to s2.\n",
    "            aligned_s1 = s1[i] + aligned_s1\n",
    "            aligned_s2 = \"-\" + aligned_s2\n",
    "            i -= 1\n",
    "        else:\n",
    "            # If moving left, add a gap to s1 and a character from s2 to the alignment.\n",
    "            aligned_s1 = \"-\" + aligned_s1\n",
    "            aligned_s2 = s2[j] + aligned_s2\n",
    "            j -= 1\n",
    "\n",
    "    # Return the maximum alignment score and the aligned sequences.\n",
    "    return max_alignment_score, aligned_s1, aligned_s2\n",
    "\n",
    "# Example usage:\n",
    "sequence1 = \"TTGACGTGGTTTCTCTAGCACCACGGATCAAGCAACAGGTGCATATTATAGGTCTTATACGAGGTGGCCTTTCAGCCCGGATATATGCAGTTGCAATATATGTGTATAAGATCTACCATACTGGCGCCCCGATAGCCCTTCTGCGTGAAAAAGAAAATGTTGCTGCATGGCCCAACTAACGAATCTTTATTGAGTCCAATAGTCCGTAAATGCCCGCAACGGCGCAGTGCTCCGGATATACACGCCAGAGTCAGACTAACCTGGCTCTGACCAAGGCCTTCCCCGGACTCAAGGGCAAAGCGGATATTACTACAGCTCGCAACCGCAACGCTGCAAGGGATAGCAGAAAAGTAGTTAAGGTTTCTACGAGTACTGCCGCCGACCAACGACCGGCTCTCAGCTACGTCGCGCTAACTGCTGCCCTGGATTGACTTCGTTCGGAACATCTGGCGATCTACGAGCTTCCCAAGTCTGCGAGGCATACTGCATGTTACTACCCGGGGTAACACAGCTCGTACATCAGCAAAGGCTATTAGGAGCCCGGGATGCCGGTTCTAAATGACTTTATTATCCACGCAGCGAACCGCACCAGGATTAGCAGTTTCTCGCAGTCCGTCCCCCGAGGGGGACGCCTTATCAAGACACACCCTGCCAGCACCGCTAGAATTAGCGGGTCCCAGTAGCGTTACGAATTCGGTCTTGCCTGGTTTCTATGCTTTCGCGAGTCCCCTCGCAGGATCCCTAATGGTCGGTATTTGCATGAGGATTGGTGACCCTCATAGAACCACTGTATGGCATCGAAGGCGCTTCACTCACGCCTACCCAGGAAGGGTGTTGTAGCCATGTCCCTGCACACCCCTGTGTATAATCTAGCCCTCGATTAAATTTTAAATTCATGATACTCCGCGCGCTAAACAGCCACGACTCGAGTTGTATTTGCGAGGAAGAGACCCAGGTGGATATGAGGGTCTGCACCCTGGTACACGTCACTACTCTCAACCAACACCGCCCATCTTCAAATGTATGCTCTTCTCTATAATCGGCCCAAATAAACCTATCCGACACGAAGGACGATCGGAGGCGACCTGTATGATCGGTCATGGTGCGGATTTCTCAGCTCCAAGATCGCCGGTCTGGTGATAATCCTGAAGCAAAGAAGCTAGTGAACCGAACCATTACATAAGCTGGGTTCCGCCAGGCAAGTTTATTAATTCCTAGGTGAGTTACCACCGATGGTCATAGTGGAACAAGAAGACCACGAAGCGACCTAAGTCCTGTGATCAGAAAGGCCTGTCTTCGCGGTGAGGGCGCTCGTCGGACTAGCAATGAATCGTATTCTGGCTTATCTTGATAAACCCAAGATATCATGGCCGCCTAAATCCCTCCCATTGTGGCGGCACAATCTAACTCGGCTTAGGGGTGGTTATAGACTTAAACCGCCTAAAGAATCAGAAGTATACGTATCGTGAGGTCAAGATGGAGTTAACCGTTACTAATTTTTCGGATTTGCTTATAACCAATGCGGTGGCAATAGCATCACCCCTTACCATGCGAATGTTTTGAATAACTTAGGTTATCATGAGCGCTGATTTTGAAATAGCATAAGTCGACTCGTAACACAGGCCGCGGCATGCGATCTTATGTTTAGTCAGTAAGTTGTTTGCGATTAATGCTTGGCGTACCATCTACGGGGCTGAGGAGAAGGTGACACCCCGTCTCGCTTTTACCCGGGATCGGCAGGTTCTTTCATGCAGAAGTTCATCCTTAGCACACTAATCAAGGGTTGTTATGTAGTTGCATTGATATCAGCAGTGTTGAGTTCTATTCAGGAACTTGCATTACGGCCGCATCTTATATGCGGTTCAGATTTTCTGAGACCCTCTGTCATTCAAGGAGTTCTTTCCACTGGTACTTTGTCTGCTTCCAGTCCCACGACTTGGGGGGATGAGATCGATATTCAGACGAAGGTTTTGTCGTTCGTTATGTCAAGATCATATCAAAGCACATCCCGATGGAGGCAAAACAAGCCACTTACGATTATTCGCAATGCATCAACCTATAAATGGACGGGCTCCGCGGAGGAGCGGGTCTGCGCTGGGAGGCAAGAGTCCAAGGTCCGTCTTCCAACAGCCATAATGAGGACCTGGGGCTCCAAGCCGCATGCGAAGGTACACACTGCATCTTCGAGTGGCTACGGCGCACCACTGATTGCAAGTACAGGATTGGAGCGAAGGTACTGCATCTCGCGCAAATTAACATCACAACGCGAATTCAAACGGAGCAGCTCATGCGCTGCTTAGTTGATGACTGCAACGGACTATCAATGTCACCACTCGATGTCTACCCGGGTGCCAACATGGATACAATCACGTCTATCTCAGGTTCTAACTGAAACTAGACACTCCCGAGGGATGTCTTAAACGGGCCCGGGTTACCCCGCTTGTTCTGGTTAGGCATTTTACTCACTTGACGCGTCACAGTTGAACCCCATTACCCCTTAGCGACTCTCTTCATGCTGTCTTGATGTTCTCGGCCTACTAAGATCACGGACCGAAGTATCGAGGGCTGAGGCCTAGGTTTGGATCGGAGGCCGCTAGACTCTTTCTTTACCGGTGAGAATGTACACTCAATCGGATCCTCGCTTTCCCCCAAAAAGCGGGTCGATTGGGTATCCCAGGCCCAAATATGAACGAAACATCATGGATGTTGGATCACATTTCACAATACAACGGCCAAGACCCTTACACCAATACAGCAGCTACGGCAGTCAGGCTGGTGCGTTTCCAGTCATTACGGATCGGTGTACTGAAAGCCACTACCGCGGTACAATGCTGTATCCTTGGGTGGAGCAGTCTTCGCGGAGCGTGGCTGGTGTACGATAGAGTAGAACCGAAGTGACGGTTAGTCGAAATGTCGGCTAGTGACGCTCGGAATTGGGAACGACCTTCTGTATATTGTTATCGATGTTCCCCGAAGCCCTCCGAACTAATACTCAATCTTTTGTAGGTCAAAATAGACAAAAGTCACAGTCTAGCTGACCCTTCTCACTGGTTACCCCACGGACCTCGCAACCACGCAGGTCTATGCCACTCCTGACTTGCCTATCTTTCGAGGTCCTGCTCGCAGGGCCACACTGCGCAAGCGACCTCGCACGTACTAAGAAACATGGCCCTAAAGAAATGTAGTGATTGGAGTGGGTCGAATGTCGTATCATTGTGCGTAACAACCCTTCATTGCACTTGATTGCGCCGCCCTCCCCGTATGGGAGCAAAGGCCTCTGTATCACCATTTCGATGTCGGCGGCTTACTGAGCGTCACTAGGTCGCCAGAAGTACTAGACTATCAACTATACAGTCCTCTCGGTACTCAAATTATAGTACCTCGCCCTCTAGGACCTTCTGGATCGCAGCGTCTACTAATTAAACTTGTACGTTCACATCGAACCATCGTTGACCACTACTACTGAATAGAGTCCAATTGATGGTAAGCGTACGATGCAAAATATGGACGTTCTGATGGTCTCGGACTCAGGAAGTTCGACCAAATGTATTCACGCGAAAAAATGTGAGGCCAAGGCTTTGTGAAACTGCCGGCTTGTACCTGATGTGCGTCATCTTGTTCAGTCTTGTATTTGTGTTGAGGGTAACCTACTATAATCCTACTAATAAGCCCCAGGCGTTTGTCATAAGTGTGGTACTTAATCGGATATCTCGGTGCTAACCATCGTCGTTAGCTAAGTGATCTTAATCGACTTGTATTACACCTCTTAAAAGCCCGATGCACTTACACCTTTGCTTCGAGCCGACGTAGAGCGAGAAATGTCTTGTTATTTAGACTTGTACAATTCGTGCCGCAGGAGGCAGGTCTGCCGAACGAAATGTAGTTACCACTATCCCCGAGGAAGAAATGGATTGGATTTGAAGCAGTCGCGGAGGGCGTCTCCGACACCTAATAATTACAGGAATCGCGTACCTTAAGTCTGGACAGGAAAAAGTGTGAAGATGCGTTAACCCTATGAGACAATTTAATAACCGCCTCAACCTGCGGTACAGGACGTCCATATTCCTGCTTCGGAATCGCAACGCTGTAGAAATTAACTCGATAGAGCTCGCGTGGATACACGGCCGGGGCCTCCGCTGCCCTTTCGCGGCTTGCACCTCGATGTAAGATGGAAAACACAGTATGACTGAAAGTGATGACCGACAGTGTAAGCCTCTACCTGGTCCCCGAAGTAAAGAGCCGTCTCCATCAAGCCGCAAACATTAAGCCCGATCAGGAGAGAGAATGAAGATGGCGGAATTCGCTAATCCCGAAGGACAAGGCCGATACCCCCCTTAATTTCGAGCCGAGGACTCACACTGCTATAGCCCCACAGCTTTGGGGCCGACTCGGTCCGAATATCCAGCTTGGACCTATGTCCGAAAAGTCGAGGACTAGCCCCTTTCAACGGTAGGCGGTGTGCATGATAGAGGGAGAACCATATCTCCGCTGAAAGCATTTCTCATCCTAACACGACTGACAGCAGATAGGGTGCTGACGACTGATCGAGACTGTATGGGTATTGGCCTAAGCAAAGGAACATCTGCTCCCCGTATCGCTAGCAAGCCATGGCATTGTTGGACTGTGAGCGTTAACCTTAACCATTACTTAGGCAGAAACTGCCGGTTCTATATACTAAAACACGGGGGAGGTAGTGGGGAAAATCCTTTCTCGTGAGTCGTAAAGTGGGTTTAAAGATTGGTTAGAGCGGAATTACAAACAGCGGACTTTATCCAAAAAACGTAATGAATTTGGAATTGTTTGCATTCACGGAAGCCCGTACGGACCTGTGAAGGTCGCGTACTGGTTGCATTCGAATCGGCTTAAGTTACCCTCTTGTAAAGGTCGTTATTGGTAATGACAGAGCTTTTTCCTACCTTAATTTCGCTGTACAGGATTACACCACCCCGACCAGCCCATGAGGGCGTAAAAGGTATTCTAAGTACTGTAGTGCTCGAGGGGAGTGGACCCTGAGTTCCCTCTTACGGATCGCGGAGAATATAGCCAATTTTAATATCTTAATTCGATGCGAGACTTCTACCCGATCAAAAATAGTCTCCCCAGGATAATAACGTACTTCCGCGTAGGCGAATGCCCTAGGGCACATTACTTATACCGGTCACATTCCCTTGATCGTCTCTAGCTTGGTCGGAACTTCATACTATCGATCGCTAAGTGCGCAAACAAAACAAGCGTATGTGTCCTCCAGTAAACTGGGCCCGAGGCCAATCCTTGGAGCAAGTGCAATCGAGTAAGAGTGACCCATGTCAGGTCAAGATCAGGTAGCTCGTTGCCAGGCGCCGGACCCATAATGGTATGCCCCTGGAAGTCCCACCAGACGGTCATCGAAGTAGGCTTCGGTAGGTGTAGTGGCTCCACAGCCTTACCGCCCCCCGCTCCTCGTATCCTCTGAATCTATTAGCCCAGGGAGTTGCGTGAACCGTTTACTTGGTGACTTAGTATGAATACATCAGGATCTGGATCGCTCGTTTAACCGAATTGGAGAAAGGCGGCGGGAGTTACGTGCGGACATAGCTGCTCTCAAGCGCTTTCTTTACTGTCATCACCCAACGTATACGAAGACAGCGTTTATCCAGCGGATTGTTTTGCCACGCTTGTGGACGATAGCAGTACTCTGTACAATCGTCCGGTTACTAACTAGAATCCGATTTAAGCGTGTTGGTTTAAATCTATACGCAGTCCAGATCGAGTGTATTATGCCGTACCGGATAAAGACGCTTAATGTAGCAATTCGCGCATTGTTCAGCGGCAGTAACCGGGGCGTCTTTCAACAGCCGCTACTTGTTAAAATTATCAAATAGGATAAAGTGGCAGGGGGTCCGCCAGACTCGTCTAACAGTAGGAACTGTCCTCATGGATAATGCTAGATAAAGAGAGAGCTTTGTACCTTCTTACAATCGTATCAAACTTCGGATAGACCGGGTAGTCGATACCTAGTGGCAGTAATAAGGATAAATGGACGTTCCGAGGTGTCGCCTCATCCCGAACATCCCAACCATAGGGATTTGCTGTTACTATAGATTTGTCACCCCACGGCTGGACCTTTTAGCTGGACCTCTTGGACGGTACGACTGTGCCATGGCGGGATTAAACATGGCTTTCGTCTTACTCGCTGTCACCGTTCGTTGATGACGGGCCCGTCCCCTTAGTCTACCGATACTGACTGGAGTCAAGGTATGGAGACGATTCGCTTGCCGGCGGGGACACAACAAGTCTCCCGGAAGACGACTTCTATTTCCGATTATAGAGTTTACTCTGACTATCCATCGAAACGGTTTCAGAGCAGATCTATCCGAAACCCAGGCGCAATACGAATATCTTGCCGCCCGTGAGGATGGAGCGAGTGTTGAAGCAGTACCCTCAATTTTCCCCACCGGGGCACGATAACATTGCTCACTCGGTATCAATAGTCACGATAGGCCGTCTACAATTTTATGCTTTTGCTACAACTGAACCTCGCTCCCAGAATCTGTATCCGGGTCAACAGAGATAACCAAAGACGGCCGGTAGCTATATTTCAAATCGAACCCACGACATACCGACCGGGATGCACCCAGCGAATGTACCTCTTGGAGCAGGAAATAGTTAGGCGTGAACGTCCGAACAACGTACGTCAATAATTCCACGGCGTTACGGCTTGATGTGGCGGTGTTATCAGACTAGGTGACCACAGCTTGGATATGAGCCTGTTATGGTCAAGATATGTCCTCTCCTCCTAGCCGGCTTTATAGGCTATAGGGTCGTGAACCAAATGCTTGAAGTGGGTCCCCCAATATCATGAAGTCAGATTTGTATGATCCAGGGATGCTTTGTCAAGAGCCGTGTGGTTTGTTGGATGGTGTAATCCGGAGAACGACGGGATATGATGCAGCGTTATAATTATTCTGTAATACCTTTTCCTAAAGGTAGGGGATATTACCATAAGAGACAGGTTTATCCCGACCGCTTCTAAATACATTCGTAGGCGTGCTATATAGTCACAGCGGACTGTAAATTCACGTGAGCGGTACTCTCGCGACGTAGTTAGAGACCTGTCTTCCGTAGCAAAGCGACCCGGATGACGCGTAATCCACCCTAACACGATGTATTCCTTATTTGTTTTGCAATAGTTAAAACTGTCGTTGATCGCTATCGCGAAGCGTCAGATACGGCTAGGTAAACCCGGACCTGTGGATGCCATGTAGCTTGGTCCCACTTGTGGTGTTACTTCACCTCCAAACTCCTTTGACCTCAATGCCCCACGCAACGCGCATATTGTTGAAGGACGAAGTCAAGTGCTGATCTAGAGTTAACTTCACGATATGCTCCGAGAAAAGAGACGCGCGGCCTGTTTGATCATCGTCCTGAGCGGGATGATGTATGTTGGCGTTTATACCAATGTCACCGTTGTAACCTGAGCAGCCCGGACTAGTCAAGCAAAGATGTACTACCTTAGGAGGTTTATAAGATATTGATTTTACCATGTACCATGCGTATAATTGTTCGTATGGCAGCTGTGTGCCCGACGCATTAGAGCAGATTGCGAGCATCTTACACAGTTTGCCTTATAGGGTTATCGCACGTCCGCGTCCCATGAGCTAGGCCCAATAACCTCAGCGCTTTATCAGTAAGCTCCGGAACATCCGCGTACTGTCCCCAAGCCAAAAGTGGGAGCCTAGATCAAGTGTGCGCCGCGGGTGTTCGCCTGATACCCGGATCGGTACATGTAACACGGCGGGCTTCCATAATGTATTTTCCATACGTAACTCCATTATAGTATCACCGAGTATTGCGTTAACACTCTATTTGCCCTCTTCTGGTTACTTGTACAAGGCACATAGACTCTCCTTGACTATTTTAGAAATCAATACAATAGACCAAACTCGGGAAAACCTAAATTGGTTTCCACGTATTGTCCGAGCGTTCGCCGGTTGGACACAGCCGCGAACAACTACTAGTAACGATGTCTTGGACAATAGGAGCAAGGCACCAAGCCCCTAGCTTGCTGGTACCATTGTCTCGAGATCGCGTGCATAGCATTCCTTCGAATGTAATACAGACGATGGGTGTTCTGAGCGTATGCGCTTCTCGGCCCTCGCTGCGGGTCGTAGTACAACGAGAAACTCTGCCGCCTCTCTATCGAGCGTTGATCGAGCTACCTTTATTGAGTTCGGGGTAGAGGTCGTAGCTTCAGCCTCGTCGGTGAGTCTCTCTTTTAACCGCCGTAGCATCCAACGCTGCAGAAAAGTGGTTACAGCTACTGAAGACTCCGACCGATGCACGTTGCAAAGACTACTCGCTCTCCTTAACTCAGGTACCCGTTGCTATATAACAGCTCTGGTTTATGAGCATATCATCGAGTTAACAGTTGTCGCCGTGTAAATATTTCGAGCCTCAGCGCACTTCCCAATAGTGGATCGGCACCTATATACTCACAAACCCTCGAAATGGTGCTAACGGAAAGACGTCGTGAAACCCAGTGCTAACCCAATCCGAAGCAAAGGGAATGGTCGCATGGGACTTTGATGGCGCTCTGGTGTCTGAGTGCGGGTCTTCTAAAGGACCGTAATGGAGCCTGACAACCGCAAGTCTTTTATTTATCACCCTCAGCACAGTTAGGGCGCTGAAGCGTCTCATTCAGCCTGTTCCGTCCACGTGCGCTTTTCCGAGACGAACTTGATGGACGGTATGCCGGGCCAATACTCAGTGGGCTCATTGTCTTAAAATGTTAGAGCTTGGTCAAATTTTCAGAGGGCCATACGCTCCTCGGAATTGTTACCCGTGGATAAAGAAATTGTTCTGCTCTATCAAGACCATTCATCAGTGTCGCCTTGATAATCGTGCTTGGCCTCGAACTTCCGGGGCTCCCCTGCCGCCGACAGTAAGCTAACACGTTACCCAGGTGCAGGGGCGGATCAAATGAGCAATAATGAGAAGCAAATCCTGGTTTTAAGGTTTCCACTTGTCAGTCCAACGGTGACAAAGGCCTTGGATAAGTGTATTGCCCCGCTCGTATACACTACTTCACACCTCTTGGTACACCTTACTGGTGACTCGACTCGCCTATGTGTGCTTCTGGTGGGTAGTTCTTAATAAGGGCTAACTGGCCCGCCTTATAGATTGTAACGTTGTGGGCCGATTCCTACCTCAACAATCCTGGTAGGGTCCACCATCGAATGTCTTGATGTGCCAAGTCACGGCTTGGACAAGTCAACTAGACGACAGAGGCACGTCGGCGGCCGTCTATACTACTTACGAAGTTATATTTGCTGGACGGTACGCTT\"\n",
    "sequence2 = \"CCCCCATTTGCTGCAGTACGAAAGCCGAGATAAGGCCGCTCGGAGTAATTATCGCGTACGAAAGTTTTCGACACGGCCTGAACAGACCGAGTTGAAACCCTATCTTTCTCTTTCGAAAGGACTTATTTTGACCTACGCTTTCAAAGATACGATCTCTGTTGTACCCCCATATACGACTCGGAGACATAGTGGTCCCAAGTTGTACTTGCCGCCGCAACCCTCGCTCGACTCAATTGGGAACCCCGTGGCATATTGTGGCGCCGGTAGGACACTCCCGTTGTCATTACACCTGGTTAGATAAACCGATTAAACCAAGTTTCCACGCGCTGAGCGACTGAACCGGTGCGGCTACGGTTATCAGCTGCCTGTAACTCTAACTCCGGTCACTTGAGCTCTATATCGCGCCTTGAACCAAGGGATCAAATCGGTTAGATAGCGAGGACGTCTGAAGTGACAGCTGACGTGATAGTCTGGTGCCACCGACCTATGTGTCGGCCTCTGATGGCGTGTGACCCCGTCCCATAGGTAATACAGGTCCGCTGCGGATGCAACGGTCCACAAACTGTATGGTGTAATCGTGCACTACAAGGCCTGGAAGCGCAAATGCTGGGACTGGGCTTAAGTCTAGTCCTACAGAACGAGGCTCGGGCTGCCTTAACGGGCACAAGTATGAAGCCACAGAAATATTTCATTGCAATATGTGCTGTGCGATTTATCGTATATAGAATCTGTGGCCTTCCATCACCGTTTTTGCAACCGCGAGGGCCGCAGTATTTGAGACAACATACGATTAATCCAGTGTAGGCCTTGATAGAGAGGAGAAAGGTAGACCGGGT\"\n",
    "max_score, alignment1, alignment2 = sequence_alignment(sequence1, sequence2)\n",
    "print( max_score)\n",
    "\n",
    "print(alignment1)\n",
    "print(alignment2)\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a9c32fa5",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
