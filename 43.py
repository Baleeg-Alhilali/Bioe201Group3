def sequence_alignment(seq1, seq2, gap_penalty=1):
    # Add gaps at the beginning of both sequences
    seq1 = "-" + seq1
    seq2 = "-" + seq2

    # Initialize the score matrix and backtrack matrix with zeros and None values
    score_matrix = [[0 for _ in range(len(seq2))] for _ in range(len(seq1))]
    backtrack_matrix = [[None for _ in range(len(seq2))] for _ in range(len(seq1))]

    # Fill in the score and backtrack matrices
    for i in range(1, len(seq1)):
        for j in range(1, len(seq2)):
            # Calculate the scores for match, delete (gap in seq1), and insert (gap in seq2)
            match_score = score_matrix[i - 1][j - 1] + (1 if seq1[i] == seq2[j] else -1)
            delete_score = score_matrix[i - 1][j] - gap_penalty
            insert_score = score_matrix[i][j - 1] - gap_penalty

            # Update the score matrix with the maximum score
            score_matrix[i][j] = max(match_score, delete_score, insert_score)

            # Update the backtrack matrix with the direction that led to the maximum score
            if score_matrix[i][j] == match_score:
                backtrack_matrix[i][j] = "d"  # Diagonal (match)
            elif score_matrix[i][j] == delete_score:
                backtrack_matrix[i][j] = "u"  # Up (gap in seq1)
            elif score_matrix[i][j] == insert_score:
                backtrack_matrix[i][j] = "l"  # Left (gap in seq2)

    # Trace back to find the aligned sequences and the maximum score
    j = len(seq2) - 1
    i = max(enumerate([score_matrix[row][j] for row in range(len(seq2) - 1, len(seq1) - 1)]), key=lambda x: x[1])[0] + len(seq2) - 1
    max_score = score_matrix[i][j]

    aligned_seq1 = aligned_seq2 = ""
    while backtrack_matrix[i][j] is not None:
        direction = backtrack_matrix[i][j]
        if direction == "d":  # Diagonal (match)
            aligned_seq1 = seq1[i] + aligned_seq1
            aligned_seq2 = seq2[j] + aligned_seq2
            i -= 1
            j -= 1
        elif direction == "u":  # Up (gap in seq1)
            aligned_seq1 = seq1[i] + aligned_seq1
            aligned_seq2 = "-" + aligned_seq2
            i -= 1
        else:  # Left (gap in seq2)
            aligned_seq1 = "-" + aligned_seq1
            aligned_seq2 = seq2[j] + aligned_seq2
            j -= 1

    return max_score, aligned_seq1, aligned_seq2


# Example usage:
string1 = "CACACCTCGGTGTGGATAACTCCGGAAGAGCCCCCCGGTTTGCGGGAGGATTGTGGGGTACCCCACACGCGTTGTATTTCTACAACAGGGACAACCTAAGCACGCAGCACACGTTGAGCTGTGGTCCTTTGAGGACGATTGGCTGTGTGTCGATGAGTTATAGCTCGGCGACAGTGAAAACAGGCAGGACTAATGCGCTTTACCTATCGATCGATCGTCCTCGTTTCTCGCTCCTGGCGTAGTAGGTTATATGGATCCCAGTCCCCTGATCGAGGAGTCACCTCACTTGAAAAGCCCCCAATGAGGAATGGATGCATGGCATCGGCGTAGCACGACGAGATCGTTCGAACGAGTTATGGTGGCCATACGACCCCTTATCGATGGCATGACGCAGTGGGGTCTCCCGTTGAGTTAACCACTGAATGCGAATCAAGTTCGTCAGTCGCACGCTTGAAATAATGCGAACCGAGCGATCACCGCAGTCCTGCACGCACATTGGGCTGAGGCTAGGGGCATTAGAATCGTACGCGAGGTGATGAAGTAATTTAACACTCCCAGTTGTCAACGCAGCCCTGCCAAGGTCACGCGCACGCCACGGCCCCGGAAGAACTAGAGGCCCCGCGGGCGGCGTAGGTGCAAGTTCATAGTATAGCCCCCTTGTGAGCACAAATTGCGTATGAGAGGCGTATCCACGTATTAAGTCGATTCCAGACGGCTCAGCCATGGGGGTCTTAACAATGTAGAAAACCTCAGGAACGATCAAAACCCTTTAGCGACATGTTGTAGCTCGTACCCGCTGCCCCTATAAAAGAGGCCGAAAATGCGAGGGCGCGTGGTCTCTCAGGGATGGAATTCCGAAAGGGCAGCGTGTCCTCCCGGCACGTATAAACTTAATACCAAGGAACGACGCACGGTGTGCTTGTGCGCGCTTATCCACTGGTTACGTTACACTGGCCATTAGTTCCATGCTGGATAAGCGCGGCGCGTTCGCGCATGTCACGCATGTCCGCTAGCTTAGTATATGTGGAAATACACACAATTGGATCCTAAAACCTGTGAACCTCCTCTCGATTAGGCCCCGCAGCAATGTGTAGACACGTGCTGAGACGTCCTTTTAAACATCCCGTCAATGGTCTGGAGACCTCAGTATGTTTGCGGATTAGAACTGGTAAAAGCTTTAACAGTGGCTTTATGCATGAATATTAGTCGCGTGGGTCGCCTTTACTGCTTGTGTATAGTCTGCCTCAAGCTCCTCATTGAGTTATAAGGCGTAGGATGTTTGGTACGCCTGTCAGTATGCATTGCGGGATGTGAGCTATATACAATGAGATTGGGGGTTGCGCTACGGCATTCGTCGACTAAATAGTCACTAGTGCTAAAACAAGAACGTCTAAGTCACAAGTTCTAAGGCTCCTGTAAAGTGGTGCGCATATAGTCGTACAAGATGCTGCGTCTTTAGGGTACGTGACAGGCTGGAGCCTCCAGCGCACGAAGACCACTCGGAAGGTCAGAAATCCCCTCAGGGTTCAAGGGGTGAGGACGCGATCAGTGAACCGCTTTGTATGGAGATGAGCTCGAACCCGATGCTTGGGTAAATGGTGTATAAGCACAATCAGTCCAGATTCCAAGTCGGTAGAAACGAGGATCGCCAAAAGTCTAACATGCGCAGTGCCCACTACTAACACGAAGAGCACTAGGGCTGGCGCGACCAACTAAACATAAGAGACACTCGCGTCCAAGAGTTTGCCACTTGGATTCAACCGCTAAGCAACGTTCTCGTAGATACCGCCCCGAGGACGTGGTTGTTGCACTTGTGTGCTACTGTCATTAAAGGTCGCAGACACCTTTCAAACGTTAATTGGAATTGCCCTAGTGGTAGTCGCCGCGGCTTCTATGAGAGGACCTTAATTCTCGAAGCTGGACAGTACACTTCCAAAAAGAGGGGCTATAGGCTTTGGTGACTTATAATTTACGAGTTAAGATATAATCGAGTACCGCTCAGTTAAAGGCTTAATGCCGTTTGGCCTCACGAGCTATCCACTCGTCCCGCACATGGTGCAATCACGTTCCATTTTACTCCGAATTTCAGCGGCGTTTATGTCGGCTCGTCCTACCACATGCACATAACCGCAGACACGCCACTGTAGCTGACATGCACGATAATAAGCCAGTTGTTGCGGTAGAGCAAACGATCGCATATGGGTAACATCAAGGCATAGGGAAGTGTCTTATCGTGAGCGAATGCGAGCAAAAACGCAGTCTACGAGCCGATTTACATACTGGGGACCTGATACTGGCCTTTCAATCCGCAAGTGGCCGGAAGATTAGGAATTTCTATTTACATTTTTACGGAGAACCCTAAGTTTGTGACGCACCGGCGTACAAGCGTAATGTTTAAGGTCTTATGGTGGAGCGACACACGGGAACTCGCAGACGGCCTCTCAAAGCTGTTCTGCCAGCGATAAATATCTTAACCGGTGAGACCGCCACTATTGACGCCTTATTCTCTGCCAGATGCAGATGCAGTTGGCCTATTGCTCTCCCAAGACTGTGCCCCACGATGCGGTTATGCTCCCTTAAGTCCGGCCCCCATTGGTAGGGTGGCGGTGGAAAAGCTAACCCTATTTAGGTTAATCCGGACGGTTGTAATCATTGTCCCACATGACCGACGGGCCTTCACGTTCTTAAGACAGATACGTTTGCAGTACCCCAGCTTAATGATCTTGCGGCATGACTAATCGTCCTTGCCCGATTCCCACCCTGCAACCAGGGCAGGTACGATCGAGTAAAAACATGATGTAATCATGTTTGTAAGCGTTGCCCCTACGAGTAGTCGGCACAAGGGACAACAATGTTTGACAGGCGCTGGGCGACTAGAATACTGCGAATGCTGATGGTGATGGAGGTCCTAAGACTCCCCCGCCGGTTTGTCCTGGAGTACGCACCCCAATAGAAGCAACTGTGTCCAATATCTCTGGACGCCCGTATGTGGTTTGGCTAAAGTAAAAAGCTAGACCTAGCGAGGTATCAGGAATAGCACTACGGAAAGAAGTGGCAGCTCCGTCGAAATTGTCTCGAGTACGTTCGAAGCACTATGGTTATCTGTTCCCCTTTTTAGTTGACATAGTAAGACATAGTAGGAAGTGGGTATGGTCAGTGGTCAATATGACGCACTATTTACAGGGCTTATTTGCCCTCACCCCCCTATCTGTCAATAAATCGCCCGAGCAAGACCCCAGGTCCATAGACGTAACTAATTGATAGGGGACAGATTACCCTATAGAAACGTTGGTGTCGAGCAGTTTAGTCAAAGTGTATGCACTTATAACACTTGACTGTATAATCCCACCTATTCTTGGTACGACTAGGGGACTGTCAGCACATTTGCGATCCAATTTCCTAGCTACATGCTCTTACCGATCCAATCTTACGTGGTATATACGTGATGACGTTATACCGGGTGGTGCTCCGACCAGCGCGTGCGACTGGCCACAGTCCGGATGGTTCACTTCTCGCGGGAGCCCCATTTATCTGGAATACAACCCCTAGTGCCTTTGGGGGTTTTGCACGTGCAAGGCTCACCCTAGCTTGATAATCCATCCTAGGTTTTCAGTCCTAACTTAGAGGGCGCATACGATGGGTCTATAATACGCTGGCAGTTAGGCCCGGACTCGCTGTGGGGGCGCACCATACCGTTTCCACTTGCGACGCTATCGACACCGTCTGAGATAGTCTCACTTACCGAACGGCCATCTACAGCTTAGGATGGGTTCTTAAGCTGCAGGTCCTCTACCCTTTCGAGGTCCGCATTGCACGGAACACTGGAGAGGAACACATGTCACACGGTGTATCGATATCGAAAGGCGTAGGTGGGAGTGGGCAACCAATGCCAACGAAAGGTTTGATCACGGCCTCAAATGCGCCAAAATTTGGCAACGAGCCTTGTCCAGCCCCGCAAAGTATGTCGCCGACTACGGGCAAAGTCGTTTTGGTATTAAAGATAATAGTGGTTCTCTGTTAGTCGAATACTGTAAAGCCCACCGTCAGCGAATTAATTGTCCCGACACTTGAAAAACAGGGGCGCACATGAAGGGTGCCATTCGGGTCATAAACCTTACTCCGCAGGAAGTGAGCTACTGACCAGAAACTTTCCTTTTGACGATACGGTGTACTCCACGTACCTTTGTTCAGTATAATAACGTCGAGTTGCGGTCGAGTTGACCTGTATGATGCAATGTCGTGGCTCAACAAGGGCTCTGCACTAGGTTTGTCTCATTTGTGACTACAGTGGCGTCGGTGCAGATACGCACTTCCAAGACCAGAAAGCCAACAAAGACAGGCCGGTGGAGAATTGTTGAAGGACGGCGTACCAACTGACCAACACAGTTTGAAGCTCTTTATTAATATTCATTGATAAAGCTGTTGCTCAACTCGCCACGATGACTAGCGGCTCTCCTACACCTGTGCATACTCCCGCGCACGGCCGCCGGTATCACATACTTCCGGCGCAATTAACTACGTAGCTCTGCTGAAAAACTATAAGAATATAACGTCCCTCTATGGACCTACTAATGGGATCAACATTGCCCTCAAGACTATAAGCATCGTGGTCCGGCAAAAAGACCTGATACTGTGTAACCTCTTCCTGTCAGGGCCCTGTAAACTGTCAACCGAACAGGGCAGTTGGTACTTAACTCGTCAAGTAGCGAGCTGAGGGTAATATCCTATTTCACAAATGTAGCCTGTTGATAATCTTCGTTGACTCAACCCTTTTATATTGGAAGCCCAATAACCAAAACTAGATCCACAGCCAACGAAGATGCGTGATCACGATCAACCGATGATTTACATAGTTCCGTCCAATCGGCTACCGTGTCCGGCTCAAAGGTCTTCCGCGCTTGCTAGGTACGCCCGAAATTAGATTCTAAGTTCAAGCGAGCGTAGGTGAATTGGGGTAGAGTAGAATTTACGAACCTTCTCGACGGTGCCAGGAGAGCCTGAGATTTATCGGGTGGATGTGAGTTGCATTTGGCCGTTGATTATAGCCCATCCAAGGCCCATGCCTGATCTGTCACTCGGTTGCCCGGACACACGATGTCAGGAATGGTGGTGTGAAATGCAAGACCTCTCATACGCGTCCTCGGAAGTGAAGAGCGCTCTGGGTCTGAGATGTTGCTGGATGCGCTCCGAGATAAGGTGCCATGGACTCAGGCTCTCCAGTTATGATACGAGTATCGTACCGAGTCGTGAATGGCCCATCGCCCCTGGCAGTTTCGTTGAGAATGGGACCGGTTGCAGAACTGCGTGATCGGATACGTCCAAAAAGCTGACATCTGGAAATCGAGCATGGCGTCAATCATACGCACAAGGTCGGGTGAACACCTTGCATTGGAGAACCGGTCCCAATTCGGAATCTAGGGCGAACATTCCCGGACCTGAAAGGATCAACCCCAAACCACCGGAGTACGCTTAACGAGAAACGCCCTCCGACCGCCCGACTGTAGCCGTTTGCCCGGGCAGTTTGCCCATTCCATGTGTCTAATTAGCTCGAGGAAGGCTTCATAGAAACAGGTGTTAGTTCATGGCCTTTAGGCGCCATAGGACCATAAGATCCTATCTCGGCCTAACTAGGGCAACCCCGTTTGTGGTTCTGAGATCGCCAATTTAGACGTCTGCTACCTGATCTTCGTCTTTTACCCAGTCGCCCGGCATGCTCAGCTTAAGCAGCAGCATTGCAGTCCGTCCGCGGCACTGCGGTTACCCTCGGTGTAAAAGCAGGTTTCTTGCTTCTACGAACCGTAAGAGCCCTCCAACTGGGTGCATTGTATCAATATAATAATAACAAAAATTGGCGTTTCCCGACATCTTGGAGGTCGAGCAGCGGATACATGGCTCTTAGTTCAGAGAAAACCAAAGCGGCCGCACTTTGTCCGTAGACGGCAGAGATTAGTGTAACACAAGGCTTAGAGGACACATTCCCGCTGGTAAGCCTCTGACGGATAAATATAGGATGTCAGGTCCTTGGTGAGAATTAGTCGCAAGGCGAAAAGTGTCAGCTACAGTGTTATACCCAAGACGACAAGAAGGACTCTGCCCATAAAGGTACCAACCTTGTATTAACCGGCAACCATTGCTCGAACGACGAGTGAGAAGCTAGTCCCCTGCCATGATCCGCGCAAATGGCTTTTATCCCTAGGCTCTTACCGGAGCAGCGATCTTCCGCTTAACGAATGTTCATGATTCATTCCGAGTTAGGTTCAGAATCCGGTTTGGTGAGGCATGGGTGTTAACTATCACAAATGGCGCTGATCCAACATGTGCGAAGGTGGAAACGTTGCTCCGGTTATATGGTGTGTGTAAGTTTCATCGTGGAGCCCAAAGATGGACATGATGATGACCATTAAGGCATCCGAATGTGTCACCCGAGAAGTGCAGAACTTCAGGATGATTATTGGTACCGTCATTATTCGAATTCACCCTAGTACGGGACCAGACGTTTCGCGTGCCTTCTCTCATATTGAAAGTTCGGTGCAAGCGCAGCGAGTAATAATGGTTTAGCCACCTACGTGCCCCCCAATGAACTGGGTTGGATGTAGATCCGTATTATTCGAGGGGCATGCTTTAAAACCATCTTATTGCTGATAAACTTAATAGGAACTTTTTAGGTCTCCCTTTTGATTGCGGACCACAAAAGTCGGACAATGGCCTTGTGGGTGCTAGAACTGGTCGGTATTTGAAAATGTCCAAGTTTTATTTTGTGATTCGCCGGCCCGGAAGTTAGTGTTCTCAATCGGAACGAGGAGTGTCAAGACACAATACGACTGTACCAGCAGCGCCGTGCGGGATAAAGAATACTCCCACGACCGACTATATACTGGGCGGACAACTGATAACGCGGGAGGTAGAAGTAAATGGTTCGTCTTGGACGCTAATAGTAAATTTACACTCCATCCCGACGGTCTAGCATAGCTAGGCCGCTAATTCCTTCCAATGCCGAGCGACGAAACGTGCAGACGTAACGCAGGTGATTTCAGTTTGGAAGCGCTAGGCCCTCCACCTCGTCTCCCAAGTCGTGGAGATTAAGCTCAACCTTGGCAGCTACATCTCCAGACATGCATCATGCGTCGAAAGATCGTTCATGACCAGGGTATAGGCCTGAAATTTAAAGCAGTAATTGCCGAGGAGCATGTCTGTGCGGAATGTGCTAAGATGGTATTCCTTTCCCTGCGACGGTTCCAATGCCATTCGTAAGGATCAAGCGGGTTATCGGATGGGCTGCACCTGATAGCTCTGCGTGCAAAGACGTCGTGGATGATTCAGTAATTTGAGTTAGTTGGAACTATAACCATCGCCCAAGGCCCATCAACCAAGTTCACAGCTAACGCGCCAATGCTGGTCGCTCCCTTTGCGTTCGGATACAATCTAGGGTGACCTTATTGTGGCCGTTCGTACTCGGGACTAGTTTAAATATCGCGTGCAAGTTTGGTTCCGCGTCGGCTATCCCATTGTTGCGTGGTACCCACTCTGTCATCTGGGATGCTATAAGTTGCCAAGAGTAAAAATTTCCCCCGCGCCGAAGTATAATGTACCGCTACAGTTAAGCATAGTCCAGGTTGAGTGGCGTGCCAACTTCTCGCATCCTCTCTCGGACGGTGGTTTCGTGGTGTCTCGGTCCCAATTGCGAGACGTGCGTCCTCGTACTCGGGATGCCTACGCGATTCTCTCCAATGTAGAACTTAGGGACCGCGCATGAGTAGCTCATGTCGTAACATCAATTTCGCGATTTACAAGACTACTGAAACTAAACAGTCAACTTATACTTGTGGCTACAGAATTGAGGAGCTCAGATAATCGTTGTGCGGCGTAATGTTTAACATATACTGTGCCAATTATTCATCGATAACAAAGGTAATATGCGTTGCTTCGATGCCAATCGGGAACCCGCTCTAAGGGCTGAAGGGTAGACACCGTCTAGAGAGTTCAGGCTCTATCAATACGGGGATTATGCACGTCCAGTTTCTAGAGTTAGTCGTATCTTGAGTCGACAAGACGTTTGAGGCAGGGTGGAACCCTATCTTCCTGCGCGTGGAGTTATCATATATGGATTTCATTACGGAAACGCATCGAATCAACTAAGGATCAATCCGCAAGCACGACCGCTTCCCTACCGACTAGTATCGGGTCTTCTCTAAGAACGCCCCCCTAAATTGAACGCAAACAACCGCAGGGTTGATCGCTGTGACGCAAGGGGGGGCGGTTTGCTGACCTACCCTGAGTCTTCCCTTTCACGATACATTCAATATAATAGACCCACCTAGCAGAACATGAGATAGGTCGCAAGTCAATCGTGTGTGTGAATCCCTTCAGTGGCCACCTTAGCTCATTACTGGCACCATACTCCAACTAGGTCAAAATACCTAAGATGATCAAGGTGGTCATGCCGTGGTCAACGTTAGGGGTGCCAGGCTTCCTACCTAGGTGAATCCCTCTTCTGGTGGCTTGGGGACGCATGGTGACTAAGGGAAAGCTGAGTCTAACCCCAATTCTCCCAAAGACCGCCTAGCGGCTGTTCCCTTGGATATTCGCTAGCCTGTTCCCGGATGGTAACATTCATGGGGCGTGTATTCGCCGCGTTCTTCGTTGTATTCATGCGTGGTTACCCCGCCCATTATCGAATACTGCCAACCTTGACAGCGCGACCCTTTCTGCGGAAGGCTATTCGACCCGTAAAGTAACGGAGCGTTTGCTGAGGTCAGCGCCAAATCGTGAAGAGCTATACGTGTACATTGACCCGAATCTAGAAATGTTCGTCGACTACGGGACAATTAGATTTAGTTA"
string2 = "ACGTGCTTAACGCCTATTTGGTGGCGTCACTGACTAACCAGAGTTTGACGACGTCCTGCCGCGCACGCGGTTAGAAGCACGCGAACCACACGACGAAAACCAATCGGGCGGTCTTCGATTTTCCCGACGCCCTTATGGCCTCGCAATGAGGACTGGGAAATAATGGCGTCAGATCAAAGAGTAGCGCACAGGGCCTCCCGTTTAAATGCCGGGCACCTGGAATAATCGTTGTGGGCGGATGCAATTGACTACAGCGTATATGGTCAGCTCATTCGATCACGTCTGGATTCCTGCGAATGTCTCCTGTGTCGCTTCAAACAGGCGCAGGATGGACTAGAAGTAACAGAAAGGTAAACATGTACGGTAGGACCAGGGGGCAATAATACATGGTCTAGTACCCCTCAGTGAGGTCGACCTAGTTAATCGGGCTCACTGAATGGGCCTGGGGACAGATGGAACAGCTTCCACCAGCCCAGCAGCGACCCTAGTCAATAGGTGTTGACCAGCGACGTCAGTTGAGCGCATGAATGGGGCCAGCGGAGCCGGGCTATGTCTCAACATAATGGAATCCTCGAATCACCGTAACGCGGTATGTTCGAAGGTACCCCGATTTAGTAATTCTGTTGTAGATCCCGTCGCTCATACATCCGCTCCTCCTCTTTCACCTTCTTTCCATCGGTGAGGTGCGGTGTACAAGGCTCAGGGTATGCGCGTTTGATTCAATATATGCTGATTCTCGTCGTACTGCTCTACGACTACTACTATCCTTAGTAGGGAAGTTACACAGCCAAAGATTAACCCTTGGGCGCTGCAGCGTTAATAAGGGCCTCCTCGGCACGTTCAGTACCGTAGATCGGCTCAGGCCATAAGGGTCCTACACACCA"
max_score, alignment1, alignment2 = sequence_alignment(string1, string2)
print("Maximum Score:", max_score)
print("Fitting Alignment of v and w:")
print(alignment1)
print(alignment2)
